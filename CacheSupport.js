importScripts("/libs/dexie.js","/libs/q.js");var systemDB,CACHE_NAME="xwebjs_cache",cachedFiles=["/","/index.html","/boot.js","/libs/q.js","/libs/xwebjs.js","/config/conf.js"],isDBEnabled=!1;function enableDB(){var e=Q.defer();try{return(systemDB=new Dexie("xwebjs_system")).version(1).stores({moduleCodes:"moduleId,[contextId+modulePath]"}),systemDB.on("ready",function(){isDBEnabled=!0,e.resolve()}),systemDB.open(),e.promise}catch(e){console.error("Failed to setup the system index DB because:"+e.oetMessage())}}function generateModuleFileCode(e){var o,n,t=/https?:\/\/[\w|.|\d|:]+\/xwebjs_module_(.+)_(.+)_(.+)/.exec(e.url);return n=t[1],o=t[2],getContextModuleCodes(t[3],n).then(function(e){var n,t="_x.exportModule(";if((e=e[0].content).substr(0,t.length)===t)return n=t+"'"+o+"',"+e.slice(t.length),new Response(n);throw Error("Invalid module content")},function(){return console.warn("Logically, this case should not happen as module resource should have been cached in the indexDB for the first time loading"),e.url=n.replace(".","/"),fetch(e).then(function(e){return console.log("Response from network is:",e),e}).catch(function(e){throw console.error("Fetching failed:",e),e})})}function getContextModuleCodes(e,n){return systemDB.moduleCodes.where("[contextId+modulePath]").equals([e,n]).toArray()}self.addEventListener("install",function(e){console.log("Service worker is installed"),console.log("Caching files"),self.skipWaiting(),e.waitUntil(caches.open(CACHE_NAME).then(function(e){console.log("Opened cache, and caching files"),e.addAll(cachedFiles)}))}),self.addEventListener("activate",function(e){console.log("Service worker is activated"),self.clients.claim()}),self.addEventListener("fetch",function(n){n.respondWith(caches.match(n.request).then(function(e){return e||(-1!==n.request.url.indexOf("xwebjs_module_")?(console.log("Fetching module content from index DB:"+n.request.url),isDBEnabled?generateModuleFileCode(n.request):enableDB().then(function(){return generateModuleFileCode(n.request)})):fetch(n.request).then(function(e){return console.log("Response from network is:",e),e}).catch(function(e){throw console.error("Fetching failed:",e),e}))}))});