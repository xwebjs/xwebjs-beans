var Q,Conf,main,libURLContext=Conf.core.libContextURL?Conf.core.libContextURL:"/libs/",coreLibs=Conf.core.libs;function enableCache(){if("serviceWorker"in navigator)return navigator.serviceWorker.register("CacheSupport.js",{scope:"/"}).then(function(n){console.log("The file cache support service worker has been registered successfully")}).catch(function(n){console.log("Failed to register the cache support:"+n)})}function enablePromise(n){scriptUtil.load(libURLContext+"q.js",function(){n()})}var scriptUtil={load:function(n,e,o){var i=document.createElement("script");i.onerror=o,e&&(i.onload=e),document.head.appendChild(i),i.src=n}};function loadDependentLibs(e,o){function i(n){console.log("Failed to load lib:"+o[t]+" because:"+n)}var t=0,c=Q.defer(),r=function(n){console.log("Library "+o[t]+" is loaded"),++t===o.length?c.resolve():scriptUtil.load(e+o[t]+".js",r,i)};return scriptUtil.load(e+o[t]+".js",r,i),c.promise}function invokeMainFn(){"M"===Conf.entryType?_x.initVM().then(function(){var n=_x.getRootVM();n.setConfiguration(_.clone(Conf)),n.init()}):_.isFunction(main)?main():console.log("Main function or method is not defined")}function init(){enableCache().then(function(){enablePromise(function(){loadDependentLibs(libURLContext,coreLibs).then(function(){return Q.delay(500)}).then(function(){invokeMainFn()}).catch(function(n){console.log("Failed to start the program because:"+n)})})})}window.onload=init;